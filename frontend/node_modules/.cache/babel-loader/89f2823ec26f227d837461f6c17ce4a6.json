{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\n\nconst useFetch = url => {\n  _s();\n\n  const [data, setData] = useState(null);\n  const [isPending, setIsPending] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const abortCont = new AbortController();\n    setTimeout(() => {\n      fetch(url, {\n        signal: abortCont.signal\n      }).then(res => {\n        if (!res.ok) {\n          throw Error('maybe there is a problem');\n        }\n\n        return res.json();\n      }).then(data => {\n        setData(data);\n        setIsPending(false);\n        setError(null);\n      }).catch(e => {\n        if (e.name === 'AbortError') {\n          console.log('fetch aborted');\n        } else {\n          setIsPending(false);\n          setError(e.message);\n        }\n      });\n    }, 2000);\n    return () => abortCont.abort();\n  }, [url]);\n  return {\n    data,\n    isPending,\n    error\n  };\n};\n\n_s(useFetch, \"VxPkICXS4AfkXU1R8tuEJAA8e58=\");\n\nexport default useFetch;","map":{"version":3,"sources":["/Users/alexandrosvasileiadis/Desktop/karia/src/tools/useEffect.jsx"],"names":["useEffect","useState","useFetch","url","data","setData","isPending","setIsPending","error","setError","abortCont","AbortController","setTimeout","fetch","signal","then","res","ok","Error","json","catch","e","name","console","log","message","abort"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;AAEA,MAAMC,QAAQ,GAAIC,GAAD,IAAS;AAAA;;AACtB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,IAAD,CAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMU,SAAS,GAAG,IAAIC,eAAJ,EAAlB;AAEAC,IAAAA,UAAU,CAAC,MAAM;AACbC,MAAAA,KAAK,CAACV,GAAD,EAAM;AAAEW,QAAAA,MAAM,EAAEJ,SAAS,CAACI;AAApB,OAAN,CAAL,CACKC,IADL,CACUC,GAAG,IAAI;AACT,YAAI,CAACA,GAAG,CAACC,EAAT,EAAa;AACT,gBAAMC,KAAK,CAAC,0BAAD,CAAX;AACH;;AACD,eAAOF,GAAG,CAACG,IAAJ,EAAP;AACH,OANL,EAOKJ,IAPL,CAOUX,IAAI,IAAI;AACVC,QAAAA,OAAO,CAACD,IAAD,CAAP;AACAG,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,QAAAA,QAAQ,CAAC,IAAD,CAAR;AACH,OAXL,EAYKW,KAZL,CAYWC,CAAC,IAAI;AACR,YAAIA,CAAC,CAACC,IAAF,KAAW,YAAf,EAA6B;AACzBC,UAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACH,SAFD,MAGK;AACDjB,UAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,UAAAA,QAAQ,CAACY,CAAC,CAACI,OAAH,CAAR;AACH;AACJ,OApBL;AAqBH,KAtBS,EAsBP,IAtBO,CAAV;AAwBA,WAAO,MAAMf,SAAS,CAACgB,KAAV,EAAb;AAEH,GA7BQ,EA6BN,CAACvB,GAAD,CA7BM,CAAT;AA+BA,SAAO;AAAEC,IAAAA,IAAF;AAAQE,IAAAA,SAAR;AAAmBE,IAAAA;AAAnB,GAAP;AACH,CArCD;;GAAMN,Q;;AAuCN,eAAeA,QAAf","sourcesContent":["import { useEffect, useState } from \"react\"\n\nconst useFetch = (url) => {\n    const [data, setData] = useState(null)\n    const [isPending, setIsPending] = useState(true)\n    const [error, setError] = useState(null)\n\n    useEffect(() => {\n        const abortCont = new AbortController()\n\n        setTimeout(() => {\n            fetch(url, { signal: abortCont.signal })\n                .then(res => {\n                    if (!res.ok) {\n                        throw Error('maybe there is a problem')\n                    }\n                    return res.json()\n                })\n                .then(data => {\n                    setData(data)\n                    setIsPending(false)\n                    setError(null)\n                })\n                .catch(e => {\n                    if (e.name === 'AbortError') {\n                        console.log('fetch aborted')\n                    }\n                    else {\n                        setIsPending(false)\n                        setError(e.message)\n                    }\n                })\n        }, 2000)\n\n        return () => abortCont.abort()\n\n    }, [url])\n\n    return { data, isPending, error }\n}\n\nexport default useFetch"]},"metadata":{},"sourceType":"module"}