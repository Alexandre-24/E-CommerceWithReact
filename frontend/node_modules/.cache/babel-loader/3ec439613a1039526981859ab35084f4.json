{"ast":null,"code":"const [success, setSuccess] = useState(false);\nconst stripe = useStripe();\nconst elements = useElements();\n\nconst handleSubmit = async e => {\n  e.preventDefault();\n  const {\n    error,\n    paymentMethod\n  } = await stripe.createPaymentMethod({\n    type: \"card\",\n    card: elements.getElement(CardElement)\n  });\n\n  if (!error) {\n    try {\n      const {\n        id\n      } = paymentMethod;\n      const response = await axios.post(\"http://localhost:8000/wines\", {\n        amount: 1000,\n        id\n      });\n\n      if (response.data) {\n        console.log(\"Successful payment\");\n        setSuccess(true);\n      }\n    } catch (error) {\n      console.log(\"Error\", error);\n    }\n  } else {\n    console.log(error.message);\n  }\n};","map":{"version":3,"sources":["/Users/alexandrosvasileiadis/Desktop/karia/src/components/handleCartFormSubmit.js"],"names":["success","setSuccess","useState","stripe","useStripe","elements","useElements","handleSubmit","e","preventDefault","error","paymentMethod","createPaymentMethod","type","card","getElement","CardElement","id","response","axios","post","amount","data","console","log","message"],"mappings":"AAAA,MAAM,CAACA,OAAD,EAAUC,UAAV,IAAwBC,QAAQ,CAAC,KAAD,CAAtC;AACA,MAAMC,MAAM,GAAGC,SAAS,EAAxB;AACA,MAAMC,QAAQ,GAAGC,WAAW,EAA5B;;AAEA,MAAMC,YAAY,GAAG,MAAOC,CAAP,IAAa;AAC9BA,EAAAA,CAAC,CAACC,cAAF;AACA,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAA2B,MAAMR,MAAM,CAACS,mBAAP,CAA2B;AAC9DC,IAAAA,IAAI,EAAE,MADwD;AAE9DC,IAAAA,IAAI,EAAET,QAAQ,CAACU,UAAT,CAAoBC,WAApB;AAFwD,GAA3B,CAAvC;;AAKA,MAAI,CAACN,KAAL,EAAY;AACR,QAAI;AACA,YAAM;AAAEO,QAAAA;AAAF,UAASN,aAAf;AACA,YAAMO,QAAQ,GAAG,MAAMC,KAAK,CAACC,IAAN,CAAW,6BAAX,EAA0C;AAC7DC,QAAAA,MAAM,EAAE,IADqD;AAE7DJ,QAAAA;AAF6D,OAA1C,CAAvB;;AAKA,UAAIC,QAAQ,CAACI,IAAb,EAAmB;AACfC,QAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACAvB,QAAAA,UAAU,CAAC,IAAD,CAAV;AACH;AAEJ,KAZD,CAYE,OAAOS,KAAP,EAAc;AACZa,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBd,KAArB;AACH;AACJ,GAhBD,MAgBO;AACHa,IAAAA,OAAO,CAACC,GAAR,CAAYd,KAAK,CAACe,OAAlB;AACH;AACJ,CA1BD","sourcesContent":["const [success, setSuccess] = useState(false)\nconst stripe = useStripe()\nconst elements = useElements()\n\nconst handleSubmit = async (e) => {\n    e.preventDefault()\n    const { error, paymentMethod } = await stripe.createPaymentMethod({\n        type: \"card\",\n        card: elements.getElement(CardElement)\n    })\n\n    if (!error) {\n        try {\n            const { id } = paymentMethod\n            const response = await axios.post(\"http://localhost:8000/wines\", {\n                amount: 1000,\n                id\n            })\n\n            if (response.data) {\n                console.log(\"Successful payment\")\n                setSuccess(true)\n            }\n\n        } catch (error) {\n            console.log(\"Error\", error)\n        }\n    } else {\n        console.log(error.message)\n    }\n}"]},"metadata":{},"sourceType":"module"}