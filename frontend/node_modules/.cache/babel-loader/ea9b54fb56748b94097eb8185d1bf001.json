{"ast":null,"code":"var _jsxFileName = \"/Users/alexandrosvasileiadis/Desktop/karia/src/components/PaymentForm.jsx\",\n    _s = $RefreshSig$();\n\nimport { CardElement, useElements, useStripe } from \"@stripe/react-stripe-js\";\nimport axios from \"axios\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport styled from \"styled-components\";\nimport PaymentSuccessMessage from \"./PaymentSuccessMessage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CARD_OPTIONS = {\n  iconStyle: \"solid\",\n  style: {\n    base: {\n      iconColor: \"#c4f0ff\",\n      color: \"#fff\",\n      fontWeight: 500,\n      fontFamily: \"Roboto, Open Sans, Segoe UI, sans-serif\",\n      fontSize: \"16px\",\n      fontSmoothing: \"antialiased\",\n      \":-webkit-autofill\": {\n        color: \"#fce883\"\n      },\n      \"::placeholder\": {\n        color: \"#87bbfd\"\n      }\n    },\n    invalid: {\n      iconColor: \"red\",\n      color: \"red\"\n    }\n  }\n};\n\nconst PaymentForm = () => {\n  _s();\n\n  const [success, setSuccess] = useState(false);\n  const stripe = useStripe();\n  const elements = useElements();\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const {\n      error,\n      paymentMethod\n    } = await stripe.createPaymentMethod({\n      type: \"card\",\n      card: elements.getElement(CardElement)\n    });\n\n    if (!error) {\n      try {\n        const {\n          id\n        } = paymentMethod;\n        const response = await axios.post(\"http://localhost:8000/wines\", {\n          amount: 1000,\n          id\n        });\n\n        if (response.data) {\n          console.log(\"Successful payment\");\n          setSuccess(true);\n        }\n      } catch (error) {\n        console.log(\"Error\", error);\n      }\n    } else {\n      console.log(error.message);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: !success ? /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n        children: /*#__PURE__*/_jsxDEV(FormRow, {\n          children: /*#__PURE__*/_jsxDEV(CardElement, {\n            style: styles,\n            options: CARD_OPTIONS\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(ButtonForCart, {\n        type: \"submit\",\n        children: \"Pay\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(PaymentSuccessMessage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n};\n\n_s(PaymentForm, \"6hDlQMsgCa6cRk+jdFUeEqLw/RU=\", false, function () {\n  return [useStripe, useElements];\n});\n\n_c = PaymentForm;\nconst Form = styled.form`\n\tmargin-top: 5%;\n`;\n_c2 = Form;\nconst styles = {\n  backgroundColor: 'red'\n};\nconst FormGroup = styled.div`\n    margin: 0 15px 20px;\n\tpadding: 0;\n\tborder-style: none;\n\tbackground-color: #fff;\n\twill-change: opacity, transform;\n\tbox-shadow: 0 6px 9px rgba(50, 50, 93, 0.06), 0 2px 5px rgba(0, 0, 0, 0.08), inset 0 1px 0 lightgray;\n\tborder-radius: 4px;\n`;\n_c3 = FormGroup;\nconst FormRow = styled.div`\n\tdisplay: flex;\n\talign-items: center;\n    color: red;\n\tmargin-left: 15px;\n`;\n_c4 = FormRow;\nconst ButtonForCart = styled.button`\n    display: block;\n\tfont-size: 16px;\n\twidth: calc(100% - 30px);\n\theight: 40px;\n\tmargin: 40px 15px 0;\n\tbackground-color: var(--color-brown);\n\tbox-shadow: 0 6px 9px rgba(50, 50, 93, 0.06), 0 2px 5px rgba(0, 0, 0, 0.08), inset 0 1px 0 brown;\n\tborder-radius: 4px;\n\tcolor: #fff;\n\tfont-weight: 600;\n\tcursor: pointer;\n\ttransition: all 100ms ease-in-out;\n\twill-change: transform, background-color, box-shadow;\n\tborder: none;\n\n    &:active{\n        background-color: #b6865c;\n\t    box-shadow: 0 6px 9px rgba(50, 50, 93, 0.06), 0 2px 5px rgba(0, 0, 0, 0.08), inset 0 1px 0 #b6865c;\n\t    transform: scale(0.99);\n    }\n`;\n_c5 = ButtonForCart;\nexport default PaymentForm;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"PaymentForm\");\n$RefreshReg$(_c2, \"Form\");\n$RefreshReg$(_c3, \"FormGroup\");\n$RefreshReg$(_c4, \"FormRow\");\n$RefreshReg$(_c5, \"ButtonForCart\");","map":{"version":3,"sources":["/Users/alexandrosvasileiadis/Desktop/karia/src/components/PaymentForm.jsx"],"names":["CardElement","useElements","useStripe","axios","useEffect","useState","styled","PaymentSuccessMessage","CARD_OPTIONS","iconStyle","style","base","iconColor","color","fontWeight","fontFamily","fontSize","fontSmoothing","invalid","PaymentForm","success","setSuccess","stripe","elements","handleSubmit","e","preventDefault","error","paymentMethod","createPaymentMethod","type","card","getElement","id","response","post","amount","data","console","log","message","styles","Form","form","backgroundColor","FormGroup","div","FormRow","ButtonForCart","button"],"mappings":"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","sourcesContent":["import { CardElement, useElements, useStripe } from \"@stripe/react-stripe-js\"\nimport axios from \"axios\"\nimport { useEffect } from \"react\"\nimport { useState } from \"react\"\nimport styled from \"styled-components\"\nimport PaymentSuccessMessage from \"./PaymentSuccessMessage\"\n\nconst CARD_OPTIONS = {\n    iconStyle: \"solid\",\n    style: {\n        base: {\n            iconColor: \"#c4f0ff\",\n            color: \"#fff\",\n            fontWeight: 500,\n            fontFamily: \"Roboto, Open Sans, Segoe UI, sans-serif\",\n            fontSize: \"16px\",\n            fontSmoothing: \"antialiased\",\n            \":-webkit-autofill\": { color: \"#fce883\" },\n            \"::placeholder\": { color: \"#87bbfd\" }\n        },\n        invalid: {\n            iconColor: \"red\",\n            color: \"red\"\n        }\n    }\n}\n\nconst PaymentForm = () => {\n    const [success, setSuccess] = useState(false)\n    const stripe = useStripe()\n    const elements = useElements()\n\n    const handleSubmit = async (e) => {\n        e.preventDefault()\n        const { error, paymentMethod } = await stripe.createPaymentMethod({\n            type: \"card\",\n            card: elements.getElement(CardElement)\n        })\n\n        if (!error) {\n            try {\n                const { id } = paymentMethod\n                const response = await axios.post(\"http://localhost:8000/wines\", {\n                    amount: 1000,\n                    id\n                })\n\n                if (response.data) {\n                    console.log(\"Successful payment\")\n                    setSuccess(true)\n                }\n\n            } catch (error) {\n                console.log(\"Error\", error)\n            }\n        } else {\n            console.log(error.message)\n        }\n    }\n\n    return (\n        <>\n            {!success ?\n                <Form onSubmit={handleSubmit}>\n                    <FormGroup>\n                        <FormRow>\n                            <CardElement style={styles} options={CARD_OPTIONS} />\n                        </FormRow>\n                    </FormGroup>\n                    <ButtonForCart type='submit'>Pay</ButtonForCart>\n                </Form>\n                :\n                <PaymentSuccessMessage />\n            }\n        </>\n    )\n}\n\nconst Form = styled.form`\n\tmargin-top: 5%;\n`\n\nconst styles = {\n    backgroundColor: 'red',\n}\n\nconst FormGroup = styled.div`\n    margin: 0 15px 20px;\n\tpadding: 0;\n\tborder-style: none;\n\tbackground-color: #fff;\n\twill-change: opacity, transform;\n\tbox-shadow: 0 6px 9px rgba(50, 50, 93, 0.06), 0 2px 5px rgba(0, 0, 0, 0.08), inset 0 1px 0 lightgray;\n\tborder-radius: 4px;\n`\n\nconst FormRow = styled.div`\n\tdisplay: flex;\n\talign-items: center;\n    color: red;\n\tmargin-left: 15px;\n`\n\nconst ButtonForCart = styled.button`\n    display: block;\n\tfont-size: 16px;\n\twidth: calc(100% - 30px);\n\theight: 40px;\n\tmargin: 40px 15px 0;\n\tbackground-color: var(--color-brown);\n\tbox-shadow: 0 6px 9px rgba(50, 50, 93, 0.06), 0 2px 5px rgba(0, 0, 0, 0.08), inset 0 1px 0 brown;\n\tborder-radius: 4px;\n\tcolor: #fff;\n\tfont-weight: 600;\n\tcursor: pointer;\n\ttransition: all 100ms ease-in-out;\n\twill-change: transform, background-color, box-shadow;\n\tborder: none;\n\n    &:active{\n        background-color: #b6865c;\n\t    box-shadow: 0 6px 9px rgba(50, 50, 93, 0.06), 0 2px 5px rgba(0, 0, 0, 0.08), inset 0 1px 0 #b6865c;\n\t    transform: scale(0.99);\n    }\n`\n\n\nexport default PaymentForm\n"]},"metadata":{},"sourceType":"module"}